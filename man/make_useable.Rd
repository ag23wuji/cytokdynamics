% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_useable.R
\name{make_useable}
\alias{make_useable}
\title{make_useable}
\usage{
make_useable(
  data = NULL,
  path = NULL,
  type = c("tibble", "dataframe"),
  clean_names = TRUE,
  to_fct = FALSE,
  check_struct = FALSE,
  file_args = list(),
  tibble_args = list(),
  clean_args = list()
)
}
\arguments{
\item{data}{A dataframe}

\item{path}{A path to a csv or xlsx file}

\item{type}{The type of object to return. Either 'tibble' or 'dataframe'}

\item{clean_names}{Whether to clean the column names using janitor::clean_names (logical)}

\item{to_fct}{Whether to convert character columns to factors (logical)}

\item{check_struct}{Whether to check the structure of the data using dplyr::glimpse (logical)}

\item{file_args}{A list of arguments to pass to either read.csv or openxlsx::read.xlsx}

\item{tibble_args}{A list of arguments to pass to tibble::as_tibble}

\item{clean_args}{A list of arguments to pass to janitor::clean_names}
}
\value{
A dataframe or tibble
}
\description{
You have big datasets and want to make them directly more usable? This function helps you with this issue. It will read in your data from a path (either as .xlsx or .csv) or take a given data, turn it into a nice format, and, if you want, give you back how it is structured!
}
\examples{
# make_useable(path = "example.csv", type = "dataframe",
# clean_names = TRUE, file_args = list(sep = ","))
# make_useable(path = "example.xlsx", type = "tibble",
# clean_names = TRUE, file_args = list(sheet = 1))
make_useable(data = mtcars, type = "dataframe", to_fct = TRUE, check_struct = TRUE)
make_useable(data = iris, type = "tibble", clean_names = FALSE)
make_useable(data = iris, type = "tibble", clean_names = TRUE)
}
